blueprint:
  name: Nordpool price and rank
  description: Testing
  domain: automation
  input:
    grid_area:
      name: Grid area sensor
      description: This is your grid area sensor
      selector:
        entity:
          domain: sensor
          integration: nordpool
    expensive_hours:
      name: Expensive hours
      description: numbers of Expensive hours
      default: 12
      selector:
        number:
          min: 0.0
          max: 24
          mode: slider
          step: 1.0
    cheap_price:
      name: Turn on price
      description: consider cheap if under this limit
      default: 0.05
      selector:
        number:
          min: 0.0
          max: 4
          mode: slider
          step: 0.01
    expensive:
      name: Expensive
      description: Action to run on expensive
      default: []
      selector:
        action: {}
    cheap:
      name: Cheap
      description: Action to run on cheap
      default: []
      selector:
        action: {}
variables:
  grid_area_var: !input 'grid_area'
  expensive_hours_var: !input 'expensive_hours'
  cheap_price_var: !input 'cheap_price'
  # Convert 15-minute prices to hourly averages for compatibility
  hourly_prices: >-
    {% set prices = state_attr(grid_area_var, 'today') %}
    {% if prices|length > 24 %}
      {% set result = [] %}
      {% for i in range(0, 24) %}
        {% set hour_data = prices[i*4:(i+1)*4] %}
        {% if hour_data|length > 0 %}
          {% set hour_avg = (hour_data|sum) / (hour_data|length) %}
          {% set result = result + [hour_avg] %}
        {% endif %}
      {% endfor %}
      {{ result }}
    {% else %}
      {{ prices }}
    {% endif %}

trigger:
  - platform: state
    entity_id: !input 'grid_area'

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ ((hourly_prices|sort)[24 - expensive_hours_var |int] > states(grid_area_var)|float) or (state_attr(grid_area_var,'current_price')|float < cheap_price_var | float) }}
        sequence: !input 'cheap'
      - conditions:
          - condition: template
            value_template: >-
              {{ ((hourly_prices|sort)[24 - expensive_hours_var |int] < states(grid_area_var)|float) or (state_attr(grid_area_var,'current_price')|float >= cheap_price_var | float) }}
        sequence: !input 'expensive'
    default: []